<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.puc.sca.api.gateway</groupId>
	<artifactId>sca-api-gateway</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>sca-api-gateway</name>
	<description>Aplicação para descoberta de microserviços</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.SR1</spring-cloud.version>
		<jwt.secret.key>e83c7691-515a-4f6c-8048-197b823f0d1b</jwt.secret.key>
	</properties>
	
	<profiles>
		<profile>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<id>dev</id>
			<properties>
				<activatedProperties>dev</activatedProperties>
			</properties>
		</profile>
		<profile>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<id>test</id>
			<properties>
				<activatedProperties>test</activatedProperties>
			</properties>
		</profile>
		<profile>
			<id>hml</id>
			<properties>
				<activatedProperties>hml</activatedProperties>
			</properties>
		</profile>
		<profile>
			<id>prd</id>
			<properties>
				<activatedProperties>prd</activatedProperties>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-zuul</artifactId>
		</dependency>
			<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Início - Segurança -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
          <groupId>com.auth0</groupId>
          <artifactId>java-jwt</artifactId>
          <version>3.8.1</version>
        </dependency>
		<!-- Segurança -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- Necessário para evitar erro de compilação no eclipse -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.1</version>
			</plugin>
				<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<id>set-custom-property</id>
						<phase>initialize</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
						    <providerSelection>1.8</providerSelection>
							<classpath>
								<element>
									<groupId>org.safehaus.jug</groupId>
									<artifactId>jug</artifactId>
									<classifier>lgpl</classifier>
									<version>2.0.0</version>
								</element>
							</classpath>
							<source>
								import org.safehaus.uuid.UUIDGenerator
								def uuid =
								UUIDGenerator.getInstance().generateRandomBasedUUID()
								project.properties.setProperty('jwt.secret.key', uuid.toString())
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	 

</project>
