version: "3"
services:

  eureka-web: 
    image: eureka-web:v2
    network_mode: bridge
    container_name: eureka-web
    expose:
      - 8761
    ports:
      - 8761:8761

  api-gateway-db:
    image: postgres:latest
    ports:
      - 5432
    network_mode: bridge
    environment:
         - POSTGRES_PASSWORD=root
         - POSTGRES_USER=postgres
         - POSTGRES_DB=sca-security
         - SPRING_PROFILES_ACTIVE=hml

  api-gateway-web:
    image: api-gateway-web:v1
    network_mode: bridge
    container_name: api-gateway-web
    expose:
      - 8080
    ports:
      - 8080:8080
    depends_on:
      - api-gateway-db
    links:
      - api-gateway-db

  crud-db:
    image: postgres:latest
    ports:
      - 5432
    network_mode: bridge
    environment:
         - POSTGRES_PASSWORD=root
         - POSTGRES_USER=postgres
         - POSTGRES_DB=sca-crud
         - SPRING_PROFILES_ACTIVE=hml
     
  crud-web:
    image: crud-web:v1
    network_mode: bridge
    container_name: crud-web
    expose:
      - 8081
    ports:
      - 8081:8081
    depends_on:
      - crud-db
    links:
      - crud-db

  bpm-db:
    image: postgres:latest
    ports:
      - 5432
    network_mode: bridge
    environment:
         - POSTGRES_PASSWORD=root
         - POSTGRES_USER=postgres
         - POSTGRES_DB=sca-bpm
         - SPRING_PROFILES_ACTIVE=$SPRING_PROFILES_ACTIVE 
         
  bpm-web:
    image: bpm-web:v26
    network_mode: bridge
    container_name: bpm-web
    expose:
      - 8092
    ports:
      - 8092:8092
    depends_on:
      - bpm-db
    links:
      - bpm-db
    
      
 #sudo SPRING_PROFILES_ACTIVE=hml TESTE=teste docker-compose up --build
 #sudo docker ps -a (imagens j√° criadas)
 #sudo docker build -t api-gateway-web  .
 #sudo docker run -p 8080:8080 -d <nome da imagem>
 #sudo docker stop <nome da imagem>
 #sudo docker rm <nome da imagem>
 #sudo docker ps (imagens ativas)